/**
 * Url Shortener API
 * Url Shortener
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Link from '../model/Link';
import RequestShortUrl from '../model/RequestShortUrl';
import ResponseShortUrl from '../model/ResponseShortUrl';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createShortUrl operation.
     * @callback module:api/DefaultApi~createShortUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResponseShortUrl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request short url (token) for target url with expiration interval (in days) setting
     * @param {module:model/RequestShortUrl} requestShortUrl 
     * @param {module:api/DefaultApi~createShortUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResponseShortUrl}
     */
    createShortUrl(requestShortUrl, callback) {
      let postBody = requestShortUrl;
      // verify the required parameter 'requestShortUrl' is set
      if (requestShortUrl === undefined || requestShortUrl === null) {
        throw new Error("Missing the required parameter 'requestShortUrl' when calling createShortUrl");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResponseShortUrl;
      return this.apiClient.callApi(
        '/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getShortUrlInfo operation.
     * @callback module:api/DefaultApi~getShortUrlInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Link} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get short url info
     * @param {String} token short url info
     * @param {module:api/DefaultApi~getShortUrlInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Link}
     */
    getShortUrlInfo(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling getShortUrlInfo");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Link;
      return this.apiClient.callApi(
        '/{token}/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hitShortUrl operation.
     * @callback module:api/DefaultApi~hitShortUrlCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Redirect to target url by token
     * @param {String} token hit short url (redirect to target url + increment hits)
     * @param {module:api/DefaultApi~hitShortUrlCallback} callback The callback function, accepting three arguments: error, data, response
     */
    hitShortUrl(token, callback) {
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling hitShortUrl");
      }

      let pathParams = {
        'token': token
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/{token}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
